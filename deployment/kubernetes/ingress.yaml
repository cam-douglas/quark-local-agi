apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: meta-model-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/websocket-services: "meta-model-service"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - meta-model.example.com
    secretName: meta-model-tls
  rules:
  - host: meta-model.example.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: meta-model-service
            port:
              number: 8000
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: meta-model-service
            port:
              number: 8002
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: meta-model-service
            port:
              number: 8001
      - path: /
        pathType: Prefix
        backend:
          service:
            name: meta-model-service
            port:
              number: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress-controller
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
  selector:
    app: nginx-ingress-controller 